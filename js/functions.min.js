(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):(global=typeof globalThis!=="undefined"?globalThis:global||self,global.LazyLoad=factory())})(this,(function(){"use strict";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}var runningOnBrowser=typeof window!=="undefined";var isBot=runningOnBrowser&&!("onscroll"in window)||typeof navigator!=="undefined"&&/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);var supportsIntersectionObserver=runningOnBrowser&&"IntersectionObserver"in window;var supportsClassList=runningOnBrowser&&"classList"in document.createElement("p");var isHiDpi=runningOnBrowser&&window.devicePixelRatio>1;var defaultSettings={elements_selector:".lazy",container:isBot||runningOnBrowser?document:null,threshold:300,thresholds:null,data_src:"src",data_srcset:"srcset",data_sizes:"sizes",data_bg:"bg",data_bg_hidpi:"bg-hidpi",data_bg_multi:"bg-multi",data_bg_multi_hidpi:"bg-multi-hidpi",data_poster:"poster",class_applied:"applied",class_loading:"loading",class_loaded:"loaded",class_error:"error",class_entered:"entered",class_exited:"exited",unobserve_completed:true,unobserve_entered:false,cancel_on_exit:true,callback_enter:null,callback_exit:null,callback_applied:null,callback_loading:null,callback_loaded:null,callback_error:null,callback_finish:null,callback_cancel:null,use_native:false};var getExtendedSettings=function getExtendedSettings(customSettings){return _extends({},defaultSettings,customSettings)};var createInstance=function createInstance(classObj,options){var event;var eventString="LazyLoad::Initialized";var instance=new classObj(options);try{event=new CustomEvent(eventString,{detail:{instance:instance}})}catch(err){event=document.createEvent("CustomEvent");event.initCustomEvent(eventString,false,false,{instance:instance})}window.dispatchEvent(event)};var autoInitialize=function autoInitialize(classObj,options){if(!options){return}if(!options.length){createInstance(classObj,options)}else{for(var i=0,optionsItem;optionsItem=options[i];i+=1){createInstance(classObj,optionsItem)}}};var SRC="src";var SRCSET="srcset";var SIZES="sizes";var POSTER="poster";var ORIGINALS="llOriginalAttrs";var statusLoading="loading";var statusLoaded="loaded";var statusApplied="applied";var statusEntered="entered";var statusError="error";var statusNative="native";var dataPrefix="data-";var statusDataName="ll-status";var getData=function getData(element,attribute){return element.getAttribute(dataPrefix+attribute)};var setData=function setData(element,attribute,value){var attrName=dataPrefix+attribute;if(value===null){element.removeAttribute(attrName);return}element.setAttribute(attrName,value)};var getStatus=function getStatus(element){return getData(element,statusDataName)};var setStatus=function setStatus(element,status){return setData(element,statusDataName,status)};var resetStatus=function resetStatus(element){return setStatus(element,null)};var hasEmptyStatus=function hasEmptyStatus(element){return getStatus(element)===null};var hasStatusLoading=function hasStatusLoading(element){return getStatus(element)===statusLoading};var hasStatusError=function hasStatusError(element){return getStatus(element)===statusError};var hasStatusNative=function hasStatusNative(element){return getStatus(element)===statusNative};var statusesAfterLoading=[statusLoading,statusLoaded,statusApplied,statusError];var hadStartedLoading=function hadStartedLoading(element){return statusesAfterLoading.indexOf(getStatus(element))>=0};var safeCallback=function safeCallback(callback,arg1,arg2,arg3){if(!callback){return}if(arg3!==undefined){callback(arg1,arg2,arg3);return}if(arg2!==undefined){callback(arg1,arg2);return}callback(arg1)};var addClass=function addClass(element,className){if(supportsClassList){element.classList.add(className);return}element.className+=(element.className?" ":"")+className};var removeClass=function removeClass(element,className){if(supportsClassList){element.classList.remove(className);return}element.className=element.className.replace(new RegExp("(^|\\s+)"+className+"(\\s+|$)")," ").replace(/^\s+/,"").replace(/\s+$/,"")};var addTempImage=function addTempImage(element){element.llTempImage=document.createElement("IMG")};var deleteTempImage=function deleteTempImage(element){delete element.llTempImage};var getTempImage=function getTempImage(element){return element.llTempImage};var unobserve=function unobserve(element,instance){if(!instance)return;var observer=instance._observer;if(!observer)return;observer.unobserve(element)};var resetObserver=function resetObserver(observer){observer.disconnect()};var unobserveEntered=function unobserveEntered(element,settings,instance){if(settings.unobserve_entered)unobserve(element,instance)};var updateLoadingCount=function updateLoadingCount(instance,delta){if(!instance)return;instance.loadingCount+=delta};var decreaseToLoadCount=function decreaseToLoadCount(instance){if(!instance)return;instance.toLoadCount-=1};var setToLoadCount=function setToLoadCount(instance,value){if(!instance)return;instance.toLoadCount=value};var isSomethingLoading=function isSomethingLoading(instance){return instance.loadingCount>0};var haveElementsToLoad=function haveElementsToLoad(instance){return instance.toLoadCount>0};var getSourceTags=function getSourceTags(parentTag){var sourceTags=[];for(var i=0,childTag;childTag=parentTag.children[i];i+=1){if(childTag.tagName==="SOURCE"){sourceTags.push(childTag)}}return sourceTags};var forEachPictureSource=function forEachPictureSource(element,fn){var parent=element.parentNode;if(!parent||parent.tagName!=="PICTURE"){return}var sourceTags=getSourceTags(parent);sourceTags.forEach(fn)};var forEachVideoSource=function forEachVideoSource(element,fn){var sourceTags=getSourceTags(element);sourceTags.forEach(fn)};var attrsSrc=[SRC];var attrsSrcPoster=[SRC,POSTER];var attrsSrcSrcsetSizes=[SRC,SRCSET,SIZES];var hasOriginalAttrs=function hasOriginalAttrs(element){return!!element[ORIGINALS]};var getOriginalAttrs=function getOriginalAttrs(element){return element[ORIGINALS]};var deleteOriginalAttrs=function deleteOriginalAttrs(element){return delete element[ORIGINALS]};var setOriginalsObject=function setOriginalsObject(element,attributes){if(hasOriginalAttrs(element)){return}var originals={};attributes.forEach((function(attribute){originals[attribute]=element.getAttribute(attribute)}));element[ORIGINALS]=originals};var saveOriginalBackgroundStyle=function saveOriginalBackgroundStyle(element){if(hasOriginalAttrs(element)){return}element[ORIGINALS]={backgroundImage:element.style.backgroundImage}};var setOrResetAttribute=function setOrResetAttribute(element,attrName,value){if(!value){element.removeAttribute(attrName);return}element.setAttribute(attrName,value)};var restoreOriginalAttrs=function restoreOriginalAttrs(element,attributes){if(!hasOriginalAttrs(element)){return}var originals=getOriginalAttrs(element);attributes.forEach((function(attribute){setOrResetAttribute(element,attribute,originals[attribute])}))};var restoreOriginalBgImage=function restoreOriginalBgImage(element){if(!hasOriginalAttrs(element)){return}var originals=getOriginalAttrs(element);element.style.backgroundImage=originals.backgroundImage};var manageApplied=function manageApplied(element,settings,instance){addClass(element,settings.class_applied);setStatus(element,statusApplied);if(!instance)return;if(settings.unobserve_completed){unobserve(element,settings)}safeCallback(settings.callback_applied,element,instance)};var manageLoading=function manageLoading(element,settings,instance){addClass(element,settings.class_loading);setStatus(element,statusLoading);if(!instance)return;updateLoadingCount(instance,+1);safeCallback(settings.callback_loading,element,instance)};var setAttributeIfValue=function setAttributeIfValue(element,attrName,value){if(!value){return}element.setAttribute(attrName,value)};var setImageAttributes=function setImageAttributes(element,settings){setAttributeIfValue(element,SIZES,getData(element,settings.data_sizes));setAttributeIfValue(element,SRCSET,getData(element,settings.data_srcset));setAttributeIfValue(element,SRC,getData(element,settings.data_src))};var setSourcesImg=function setSourcesImg(imgEl,settings){forEachPictureSource(imgEl,(function(sourceTag){setOriginalsObject(sourceTag,attrsSrcSrcsetSizes);setImageAttributes(sourceTag,settings)}));setOriginalsObject(imgEl,attrsSrcSrcsetSizes);setImageAttributes(imgEl,settings)};var setSourcesIframe=function setSourcesIframe(iframe,settings){setOriginalsObject(iframe,attrsSrc);setAttributeIfValue(iframe,SRC,getData(iframe,settings.data_src))};var setSourcesVideo=function setSourcesVideo(videoEl,settings){forEachVideoSource(videoEl,(function(sourceEl){setOriginalsObject(sourceEl,attrsSrc);setAttributeIfValue(sourceEl,SRC,getData(sourceEl,settings.data_src))}));setOriginalsObject(videoEl,attrsSrcPoster);setAttributeIfValue(videoEl,POSTER,getData(videoEl,settings.data_poster));setAttributeIfValue(videoEl,SRC,getData(videoEl,settings.data_src));videoEl.load()};var setBackground=function setBackground(element,settings,instance){var bg1xValue=getData(element,settings.data_bg);var bgHiDpiValue=getData(element,settings.data_bg_hidpi);var bgDataValue=isHiDpi&&bgHiDpiValue?bgHiDpiValue:bg1xValue;if(!bgDataValue)return;element.style.backgroundImage='url("'.concat(bgDataValue,'")');getTempImage(element).setAttribute(SRC,bgDataValue);manageLoading(element,settings,instance)};var setMultiBackground=function setMultiBackground(element,settings,instance){var bg1xValue=getData(element,settings.data_bg_multi);var bgHiDpiValue=getData(element,settings.data_bg_multi_hidpi);var bgDataValue=isHiDpi&&bgHiDpiValue?bgHiDpiValue:bg1xValue;if(!bgDataValue){return}element.style.backgroundImage=bgDataValue;manageApplied(element,settings,instance)};var setSourcesFunctions={IMG:setSourcesImg,IFRAME:setSourcesIframe,VIDEO:setSourcesVideo};var setSourcesNative=function setSourcesNative(element,settings){var setSourcesFunction=setSourcesFunctions[element.tagName];if(!setSourcesFunction){return}setSourcesFunction(element,settings)};var setSources=function setSources(element,settings,instance){var setSourcesFunction=setSourcesFunctions[element.tagName];if(!setSourcesFunction){return}setSourcesFunction(element,settings);manageLoading(element,settings,instance)};var elementsWithLoadEvent=["IMG","IFRAME","VIDEO"];var hasLoadEvent=function hasLoadEvent(element){return elementsWithLoadEvent.indexOf(element.tagName)>-1};var checkFinish=function checkFinish(settings,instance){if(instance&&!isSomethingLoading(instance)&&!haveElementsToLoad(instance)){safeCallback(settings.callback_finish,instance)}};var addEventListener=function addEventListener(element,eventName,handler){element.addEventListener(eventName,handler);element.llEvLisnrs[eventName]=handler};var removeEventListener=function removeEventListener(element,eventName,handler){element.removeEventListener(eventName,handler)};var hasEventListeners=function hasEventListeners(element){return!!element.llEvLisnrs};var addEventListeners=function addEventListeners(element,loadHandler,errorHandler){if(!hasEventListeners(element))element.llEvLisnrs={};var loadEventName=element.tagName==="VIDEO"?"loadeddata":"load";addEventListener(element,loadEventName,loadHandler);addEventListener(element,"error",errorHandler)};var removeEventListeners=function removeEventListeners(element){if(!hasEventListeners(element)){return}var eventListeners=element.llEvLisnrs;for(var eventName in eventListeners){var handler=eventListeners[eventName];removeEventListener(element,eventName,handler)}delete element.llEvLisnrs};var doneHandler=function doneHandler(element,settings,instance){deleteTempImage(element);updateLoadingCount(instance,-1);decreaseToLoadCount(instance);removeClass(element,settings.class_loading);if(settings.unobserve_completed){unobserve(element,instance)}};var loadHandler=function loadHandler(event,element,settings,instance){var goingNative=hasStatusNative(element);doneHandler(element,settings,instance);addClass(element,settings.class_loaded);setStatus(element,statusLoaded);safeCallback(settings.callback_loaded,element,instance);if(!goingNative)checkFinish(settings,instance)};var errorHandler=function errorHandler(event,element,settings,instance){var goingNative=hasStatusNative(element);doneHandler(element,settings,instance);addClass(element,settings.class_error);setStatus(element,statusError);safeCallback(settings.callback_error,element,instance);if(!goingNative)checkFinish(settings,instance)};var addOneShotEventListeners=function addOneShotEventListeners(element,settings,instance){var elementToListenTo=getTempImage(element)||element;if(hasEventListeners(elementToListenTo)){return}var _loadHandler=function _loadHandler(event){loadHandler(event,element,settings,instance);removeEventListeners(elementToListenTo)};var _errorHandler=function _errorHandler(event){errorHandler(event,element,settings,instance);removeEventListeners(elementToListenTo)};addEventListeners(elementToListenTo,_loadHandler,_errorHandler)};var loadBackground=function loadBackground(element,settings,instance){addTempImage(element);addOneShotEventListeners(element,settings,instance);saveOriginalBackgroundStyle(element);setBackground(element,settings,instance);setMultiBackground(element,settings,instance)};var loadRegular=function loadRegular(element,settings,instance){addOneShotEventListeners(element,settings,instance);setSources(element,settings,instance)};var load=function load(element,settings,instance){if(hasLoadEvent(element)){loadRegular(element,settings,instance)}else{loadBackground(element,settings,instance)}};var loadNative=function loadNative(element,settings,instance){element.setAttribute("loading","lazy");addOneShotEventListeners(element,settings,instance);setSourcesNative(element,settings);setStatus(element,statusNative)};var removeImageAttributes=function removeImageAttributes(element){element.removeAttribute(SRC);element.removeAttribute(SRCSET);element.removeAttribute(SIZES)};var resetSourcesImg=function resetSourcesImg(element){forEachPictureSource(element,(function(sourceTag){removeImageAttributes(sourceTag)}));removeImageAttributes(element)};var restoreImg=function restoreImg(imgEl){forEachPictureSource(imgEl,(function(sourceEl){restoreOriginalAttrs(sourceEl,attrsSrcSrcsetSizes)}));restoreOriginalAttrs(imgEl,attrsSrcSrcsetSizes)};var restoreVideo=function restoreVideo(videoEl){forEachVideoSource(videoEl,(function(sourceEl){restoreOriginalAttrs(sourceEl,attrsSrc)}));restoreOriginalAttrs(videoEl,attrsSrcPoster);videoEl.load()};var restoreIframe=function restoreIframe(iframeEl){restoreOriginalAttrs(iframeEl,attrsSrc)};var restoreFunctions={IMG:restoreImg,IFRAME:restoreIframe,VIDEO:restoreVideo};var restoreAttributes=function restoreAttributes(element){var restoreFunction=restoreFunctions[element.tagName];if(!restoreFunction){restoreOriginalBgImage(element);return}restoreFunction(element)};var resetClasses=function resetClasses(element,settings){if(hasEmptyStatus(element)||hasStatusNative(element)){return}removeClass(element,settings.class_entered);removeClass(element,settings.class_exited);removeClass(element,settings.class_applied);removeClass(element,settings.class_loading);removeClass(element,settings.class_loaded);removeClass(element,settings.class_error)};var restore=function restore(element,settings){restoreAttributes(element);resetClasses(element,settings);resetStatus(element);deleteOriginalAttrs(element)};var cancelLoading=function cancelLoading(element,entry,settings,instance){if(!settings.cancel_on_exit)return;if(!hasStatusLoading(element))return;if(element.tagName!=="IMG")return;removeEventListeners(element);resetSourcesImg(element);restoreImg(element);removeClass(element,settings.class_loading);updateLoadingCount(instance,-1);resetStatus(element);safeCallback(settings.callback_cancel,element,entry,instance)};var onEnter=function onEnter(element,entry,settings,instance){var dontLoad=hadStartedLoading(element);setStatus(element,statusEntered);addClass(element,settings.class_entered);removeClass(element,settings.class_exited);unobserveEntered(element,settings,instance);safeCallback(settings.callback_enter,element,entry,instance);if(dontLoad)return;load(element,settings,instance)};var onExit=function onExit(element,entry,settings,instance){if(hasEmptyStatus(element))return;addClass(element,settings.class_exited);cancelLoading(element,entry,settings,instance);safeCallback(settings.callback_exit,element,entry,instance)};var tagsWithNativeLazy=["IMG","IFRAME","VIDEO"];var shouldUseNative=function shouldUseNative(settings){return settings.use_native&&"loading"in HTMLImageElement.prototype};var loadAllNative=function loadAllNative(elements,settings,instance){elements.forEach((function(element){if(tagsWithNativeLazy.indexOf(element.tagName)===-1){return}loadNative(element,settings,instance)}));setToLoadCount(instance,0)};var isIntersecting=function isIntersecting(entry){return entry.isIntersecting||entry.intersectionRatio>0};var getObserverSettings=function getObserverSettings(settings){return{root:settings.container===document?null:settings.container,rootMargin:settings.thresholds||settings.threshold+"px"}};var intersectionHandler=function intersectionHandler(entries,settings,instance){entries.forEach((function(entry){return isIntersecting(entry)?onEnter(entry.target,entry,settings,instance):onExit(entry.target,entry,settings,instance)}))};var observeElements=function observeElements(observer,elements){elements.forEach((function(element){observer.observe(element)}))};var updateObserver=function updateObserver(observer,elementsToObserve){resetObserver(observer);observeElements(observer,elementsToObserve)};var setObserver=function setObserver(settings,instance){if(!supportsIntersectionObserver||shouldUseNative(settings)){return}instance._observer=new IntersectionObserver((function(entries){intersectionHandler(entries,settings,instance)}),getObserverSettings(settings))};var toArray=function toArray(nodeSet){return Array.prototype.slice.call(nodeSet)};var queryElements=function queryElements(settings){return settings.container.querySelectorAll(settings.elements_selector)};var excludeManagedElements=function excludeManagedElements(elements){return toArray(elements).filter(hasEmptyStatus)};var hasError=function hasError(element){return hasStatusError(element)};var filterErrorElements=function filterErrorElements(elements){return toArray(elements).filter(hasError)};var getElementsToLoad=function getElementsToLoad(elements,settings){return excludeManagedElements(elements||queryElements(settings))};var retryLazyLoad=function retryLazyLoad(settings,instance){var errorElements=filterErrorElements(queryElements(settings));errorElements.forEach((function(element){removeClass(element,settings.class_error);resetStatus(element)}));instance.update()};var setOnlineCheck=function setOnlineCheck(settings,instance){if(!runningOnBrowser){return}window.addEventListener("online",(function(){retryLazyLoad(settings,instance)}))};var LazyLoad=function LazyLoad(customSettings,elements){var settings=getExtendedSettings(customSettings);this._settings=settings;this.loadingCount=0;setObserver(settings,this);setOnlineCheck(settings,this);this.update(elements)};LazyLoad.prototype={update:function update(givenNodeset){var settings=this._settings;var elementsToLoad=getElementsToLoad(givenNodeset,settings);setToLoadCount(this,elementsToLoad.length);if(isBot||!supportsIntersectionObserver){this.loadAll(elementsToLoad);return}if(shouldUseNative(settings)){loadAllNative(elementsToLoad,settings,this);return}updateObserver(this._observer,elementsToLoad)},destroy:function destroy(){if(this._observer){this._observer.disconnect()}queryElements(this._settings).forEach((function(element){deleteOriginalAttrs(element)}));delete this._observer;delete this._settings;delete this.loadingCount;delete this.toLoadCount},loadAll:function loadAll(elements){var _this=this;var settings=this._settings;var elementsToLoad=getElementsToLoad(elements,settings);elementsToLoad.forEach((function(element){unobserve(element,_this);load(element,settings,_this)}))},restoreAll:function restoreAll(){var settings=this._settings;queryElements(settings).forEach((function(element){restore(element,settings)}))}};LazyLoad.load=function(element,customSettings){var settings=getExtendedSettings(customSettings);load(element,settings)};LazyLoad.resetStatus=function(element){resetStatus(element)};if(runningOnBrowser){autoInitialize(LazyLoad,window.lazyLoadOptions)}return LazyLoad}));var EasyAutocomplete=function(scope){scope.Configuration=function Configuration(options){var defaults={data:"list-required",url:"list-required",dataType:"json",listLocation:function(data){return data},xmlElementName:"",getValue:function(element){return element},autocompleteOff:true,placeholder:false,ajaxCallback:function(){},matchResponseProperty:false,list:{sort:{enabled:false,method:function(a,b){a=defaults.getValue(a);b=defaults.getValue(b);if(a<b){return-1}if(a>b){return 1}return 0}},maxNumberOfElements:6,hideOnEmptyPhrase:true,match:{enabled:false,caseSensitive:false,method:function(element,phrase){if(element.search(phrase)>-1){return true}else{return false}}},showAnimation:{type:"normal",time:400,callback:function(){}},hideAnimation:{type:"normal",time:400,callback:function(){}},onClickEvent:function(){},onSelectItemEvent:function(){},onLoadEvent:function(){},onChooseEvent:function(){},onKeyEnterEvent:function(){},onMouseOverEvent:function(){},onMouseOutEvent:function(){},onShowListEvent:function(){},onHideListEvent:function(){}},highlightPhrase:true,theme:"",cssClasses:"",minCharNumber:0,requestDelay:0,adjustWidth:true,ajaxSettings:{},preparePostData:function(data,inputPhrase){return data},loggerEnabled:true,template:"",categoriesAssigned:false,categories:[{maxNumberOfElements:4}]};var externalObjects=["ajaxSettings","template"];this.get=function(propertyName){return defaults[propertyName]};this.equals=function(name,value){if(isAssigned(name)){if(defaults[name]===value){return true}}return false};this.checkDataUrlProperties=function(){if(defaults.url==="list-required"&&defaults.data==="list-required"){return false}return true};this.checkRequiredProperties=function(){for(var propertyName in defaults){if(defaults[propertyName]==="required"){logger.error("Option "+propertyName+" must be defined");return false}}return true};this.printPropertiesThatDoesntExist=function(consol,optionsToCheck){printPropertiesThatDoesntExist(consol,optionsToCheck)};prepareDefaults();mergeOptions();if(defaults.loggerEnabled===true){printPropertiesThatDoesntExist(console,options)}addAjaxSettings();processAfterMerge();function prepareDefaults(){if(options.dataType==="xml"){if(!options.getValue){options.getValue=function(element){return $(element).text()}}if(!options.list){options.list={}}if(!options.list.sort){options.list.sort={}}options.list.sort.method=function(a,b){a=options.getValue(a);b=options.getValue(b);if(a<b){return-1}if(a>b){return 1}return 0};if(!options.list.match){options.list.match={}}options.list.match.method=function(element,phrase){if(element.search(phrase)>-1){return true}else{return false}}}if(options.categories!==undefined&&options.categories instanceof Array){var categories=[];for(var i=0,length=options.categories.length;i<length;i+=1){var category=options.categories[i];for(var property in defaults.categories[0]){if(category[property]===undefined){category[property]=defaults.categories[0][property]}}categories.push(category)}options.categories=categories}}function mergeOptions(){defaults=mergeObjects(defaults,options);function mergeObjects(source,target){var mergedObject=source||{};for(var propertyName in source){if(target[propertyName]!==undefined&&target[propertyName]!==null){if(typeof target[propertyName]!=="object"||target[propertyName]instanceof Array){mergedObject[propertyName]=target[propertyName]}else{mergeObjects(source[propertyName],target[propertyName])}}}if(target.data!==undefined&&target.data!==null&&typeof target.data==="object"){mergedObject.data=target.data}return mergedObject}}function processAfterMerge(){if(defaults.url!=="list-required"&&typeof defaults.url!=="function"){var defaultUrl=defaults.url;defaults.url=function(){return defaultUrl}}if(defaults.ajaxSettings.url!==undefined&&typeof defaults.ajaxSettings.url!=="function"){var defaultUrl=defaults.ajaxSettings.url;defaults.ajaxSettings.url=function(){return defaultUrl}}if(typeof defaults.listLocation==="string"){var defaultlistLocation=defaults.listLocation;if(defaults.dataType.toUpperCase()==="XML"){defaults.listLocation=function(data){return $(data).find(defaultlistLocation)}}else{defaults.listLocation=function(data){return data[defaultlistLocation]}}}if(typeof defaults.getValue==="string"){var defaultsGetValue=defaults.getValue;defaults.getValue=function(element){return element[defaultsGetValue]}}if(options.categories!==undefined){defaults.categoriesAssigned=true}}function addAjaxSettings(){if(options.ajaxSettings!==undefined&&typeof options.ajaxSettings==="object"){defaults.ajaxSettings=options.ajaxSettings}else{defaults.ajaxSettings={}}}function isAssigned(name){if(defaults[name]!==undefined&&defaults[name]!==null){return true}else{return false}}function printPropertiesThatDoesntExist(consol,optionsToCheck){checkPropertiesIfExist(defaults,optionsToCheck);function checkPropertiesIfExist(source,target){for(var property in target){if(source[property]===undefined){consol.log("Property '"+property+"' does not exist in EasyAutocomplete options API.")}if(typeof source[property]==="object"&&$.inArray(property,externalObjects)===-1){checkPropertiesIfExist(source[property],target[property])}}}}};return scope}(EasyAutocomplete||{});var EasyAutocomplete=function(scope){scope.Logger=function Logger(){this.error=function(message){console.log("ERROR: "+message)};this.warning=function(message){console.log("WARNING: "+message)}};return scope}(EasyAutocomplete||{});var EasyAutocomplete=function(scope){scope.Constans=function Constans(){var constants={CONTAINER_CLASS:"easy-autocomplete-container",CONTAINER_ID:"eac-container-",WRAPPER_CSS_CLASS:"easy-autocomplete"};this.getValue=function(propertyName){return constants[propertyName]}};return scope}(EasyAutocomplete||{});var EasyAutocomplete=function(scope){scope.ListBuilderService=function ListBuilderService(configuration,proccessResponseData){this.init=function(data){var listBuilder=[],builder={};builder.data=configuration.get("listLocation")(data);builder.getValue=configuration.get("getValue");builder.maxListSize=configuration.get("list").maxNumberOfElements;listBuilder.push(builder);return listBuilder};this.updateCategories=function(listBuilder,data){if(configuration.get("categoriesAssigned")){listBuilder=[];for(var i=0;i<configuration.get("categories").length;i+=1){var builder=convertToListBuilder(configuration.get("categories")[i],data);listBuilder.push(builder)}}return listBuilder};this.convertXml=function(listBuilder){if(configuration.get("dataType").toUpperCase()==="XML"){for(var i=0;i<listBuilder.length;i+=1){listBuilder[i].data=convertXmlToList(listBuilder[i])}}return listBuilder};this.processData=function(listBuilder,inputPhrase){for(var i=0,length=listBuilder.length;i<length;i+=1){listBuilder[i].data=proccessResponseData(configuration,listBuilder[i],inputPhrase)}return listBuilder};this.checkIfDataExists=function(listBuilders){for(var i=0,length=listBuilders.length;i<length;i+=1){if(listBuilders[i].data!==undefined&&listBuilders[i].data instanceof Array){if(listBuilders[i].data.length>0){return true}}}return false};function convertToListBuilder(category,data){var builder={};if(configuration.get("dataType").toUpperCase()==="XML"){builder=convertXmlToListBuilder()}else{builder=convertDataToListBuilder()}if(category.header!==undefined){builder.header=category.header}if(category.maxNumberOfElements!==undefined){builder.maxNumberOfElements=category.maxNumberOfElements}if(configuration.get("list").maxNumberOfElements!==undefined){builder.maxListSize=configuration.get("list").maxNumberOfElements}if(category.getValue!==undefined){if(typeof category.getValue==="string"){var defaultsGetValue=category.getValue;builder.getValue=function(element){return element[defaultsGetValue]}}else if(typeof category.getValue==="function"){builder.getValue=category.getValue}}else{builder.getValue=configuration.get("getValue")}return builder;function convertXmlToListBuilder(){var builder={},listLocation;if(category.xmlElementName!==undefined){builder.xmlElementName=category.xmlElementName}if(category.listLocation!==undefined){listLocation=category.listLocation}else if(configuration.get("listLocation")!==undefined){listLocation=configuration.get("listLocation")}if(listLocation!==undefined){if(typeof listLocation==="string"){builder.data=$(data).find(listLocation)}else if(typeof listLocation==="function"){builder.data=listLocation(data)}}else{builder.data=data}return builder}function convertDataToListBuilder(){var builder={};if(category.listLocation!==undefined){if(typeof category.listLocation==="string"){builder.data=data[category.listLocation]}else if(typeof category.listLocation==="function"){builder.data=category.listLocation(data)}}else{builder.data=data}return builder}}function convertXmlToList(builder){var simpleList=[];if(builder.xmlElementName===undefined){builder.xmlElementName=configuration.get("xmlElementName")}$(builder.data).find(builder.xmlElementName).each((function(){simpleList.push(this)}));return simpleList}};return scope}(EasyAutocomplete||{});var EasyAutocomplete=function(scope){scope.proccess=function proccessData(config,listBuilder,phrase){scope.proccess.match=match;var list=listBuilder.data,inputPhrase=phrase;list=findMatch(list,inputPhrase);list=reduceElementsInList(list);list=sort(list);return list;function findMatch(list,phrase){var preparedList=[],value="";if(config.get("list").match.enabled){for(var i=0,length=list.length;i<length;i+=1){value=config.get("getValue")(list[i]);if(match(value,phrase)){preparedList.push(list[i])}}}else{preparedList=list}return preparedList}function match(value,phrase){if(!config.get("list").match.caseSensitive){if(typeof value==="string"){value=value.toLowerCase()}phrase=phrase.toLowerCase()}if(config.get("list").match.method(value,phrase)){return true}else{return false}}function reduceElementsInList(list){if(listBuilder.maxNumberOfElements!==undefined&&list.length>listBuilder.maxNumberOfElements){list=list.slice(0,listBuilder.maxNumberOfElements)}return list}function sort(list){if(config.get("list").sort.enabled){list.sort(config.get("list").sort.method)}return list}};return scope}(EasyAutocomplete||{});var EasyAutocomplete=function(scope){scope.Template=function Template(options){var genericTemplates={basic:{type:"basic",method:function(element){return element},cssClass:""},description:{type:"description",fields:{description:"description"},method:function(element){return element+" - description"},cssClass:"eac-description"},iconLeft:{type:"iconLeft",fields:{icon:""},method:function(element){return element},cssClass:"eac-icon-left"},iconRight:{type:"iconRight",fields:{iconSrc:""},method:function(element){return element},cssClass:"eac-icon-right"},links:{type:"links",fields:{link:""},method:function(element){return element},cssClass:""},custom:{type:"custom",method:function(){},cssClass:""}},convertTemplateToMethod=function(template){var _fields=template.fields,buildMethod;if(template.type==="description"){buildMethod=genericTemplates.description.method;if(typeof _fields.description==="string"){buildMethod=function(elementValue,element){return elementValue+" - <span>"+element[_fields.description]+"</span>"}}else if(typeof _fields.description==="function"){buildMethod=function(elementValue,element){return elementValue+" - <span>"+_fields.description(element)+"</span>"}}return buildMethod}if(template.type==="iconRight"){if(typeof _fields.iconSrc==="string"){buildMethod=function(elementValue,element){return elementValue+"<img class='eac-icon' src='"+element[_fields.iconSrc]+"' />"}}else if(typeof _fields.iconSrc==="function"){buildMethod=function(elementValue,element){return elementValue+"<img class='eac-icon' src='"+_fields.iconSrc(element)+"' />"}}return buildMethod}if(template.type==="iconLeft"){if(typeof _fields.iconSrc==="string"){buildMethod=function(elementValue,element){return"<img class='eac-icon' src='"+element[_fields.iconSrc]+"' />"+elementValue}}else if(typeof _fields.iconSrc==="function"){buildMethod=function(elementValue,element){return"<img class='eac-icon' src='"+_fields.iconSrc(element)+"' />"+elementValue}}return buildMethod}if(template.type==="links"){if(typeof _fields.link==="string"){buildMethod=function(elementValue,element){return"<a href='"+element[_fields.link]+"' >"+elementValue+"</a>"}}else if(typeof _fields.link==="function"){buildMethod=function(elementValue,element){return"<a href='"+_fields.link(element)+"' >"+elementValue+"</a>"}}return buildMethod}if(template.type==="custom"){return template.method}return genericTemplates.basic.method},prepareBuildMethod=function(options){if(!options||!options.type){return genericTemplates.basic.method}if(options.type&&genericTemplates[options.type]){return convertTemplateToMethod(options)}else{return genericTemplates.basic.method}},templateClass=function(options){var emptyStringFunction=function(){return""};if(!options||!options.type){return emptyStringFunction}if(options.type&&genericTemplates[options.type]){return function(){var _cssClass=genericTemplates[options.type].cssClass;return function(){return _cssClass}}()}else{return emptyStringFunction}};this.getTemplateClass=templateClass(options);this.build=prepareBuildMethod(options)};return scope}(EasyAutocomplete||{});var EasyAutocomplete=function(scope){scope.main=function Core($input,options){var module={name:"EasyAutocomplete",shortcut:"eac"};var consts=new scope.Constans,config=new scope.Configuration(options),logger=new scope.Logger,template=new scope.Template(options.template),listBuilderService=new scope.ListBuilderService(config,scope.proccess),checkParam=config.equals,$field=$input,$container="",elementsList=[],selectedElement=-1,requestDelayTimeoutId;scope.consts=consts;this.getConstants=function(){return consts};this.getConfiguration=function(){return config};this.getContainer=function(){return $container};this.getSelectedItemIndex=function(){return selectedElement};this.getItems=function(){return elementsList};this.getItemData=function(index){if(elementsList.length<index||elementsList[index]===undefined){return-1}else{return elementsList[index]}};this.getSelectedItemData=function(){return this.getItemData(selectedElement)};this.build=function(){prepareField()};this.init=function(){init()};function init(){if($field.length===0){logger.error("Input field doesn't exist.");return}if(!config.checkDataUrlProperties()){logger.error("One of options variables 'data' or 'url' must be defined.");return}if(!config.checkRequiredProperties()){logger.error("Will not work without mentioned properties.");return}prepareField();bindEvents()}function prepareField(){if($field.parent().hasClass(consts.getValue("WRAPPER_CSS_CLASS"))){removeContainer();removeWrapper()}createWrapper();createContainer();$container=$("#"+getContainerId());if(config.get("placeholder")){$field.attr("placeholder",config.get("placeholder"))}function createWrapper(){var $wrapper=$("<div>"),classes=consts.getValue("WRAPPER_CSS_CLASS");if(config.get("theme")&&config.get("theme")!==""){classes+=" eac-"+config.get("theme")}if(config.get("cssClasses")&&config.get("cssClasses")!==""){classes+=" "+config.get("cssClasses")}if(template.getTemplateClass()!==""){classes+=" "+template.getTemplateClass()}$wrapper.addClass(classes);$field.wrap($wrapper);if(config.get("adjustWidth")===true){adjustWrapperWidth()}}function adjustWrapperWidth(){var fieldWidth=$field.outerWidth();$field.parent().css("width",fieldWidth)}function removeWrapper(){$field.unwrap()}function createContainer(){var $elements_container=$("<div>").addClass(consts.getValue("CONTAINER_CLASS"));$elements_container.attr("id",getContainerId()).prepend($("<ul>"));(function(){$elements_container.on("show.eac",(function(){switch(config.get("list").showAnimation.type){case"slide":var animationTime=config.get("list").showAnimation.time,callback=config.get("list").showAnimation.callback;$elements_container.find("ul").slideDown(animationTime,callback);break;case"fade":var animationTime=config.get("list").showAnimation.time,callback=config.get("list").showAnimation.callback;$elements_container.find("ul").fadeIn(animationTime),callback;break;default:$elements_container.find("ul").show();break}config.get("list").onShowListEvent()})).on("hide.eac",(function(){switch(config.get("list").hideAnimation.type){case"slide":var animationTime=config.get("list").hideAnimation.time,callback=config.get("list").hideAnimation.callback;$elements_container.find("ul").slideUp(animationTime,callback);break;case"fade":var animationTime=config.get("list").hideAnimation.time,callback=config.get("list").hideAnimation.callback;$elements_container.find("ul").fadeOut(animationTime,callback);break;default:$elements_container.find("ul").hide();break}config.get("list").onHideListEvent()})).on("selectElement.eac",(function(){$elements_container.find("ul li").removeClass("selected");$elements_container.find("ul li").eq(selectedElement).addClass("selected");config.get("list").onSelectItemEvent()})).on("loadElements.eac",(function(event,listBuilders,phrase){var $item="",$listContainer=$elements_container.find("ul");$listContainer.empty().detach();elementsList=[];var counter=0;for(var builderIndex=0,listBuildersLength=listBuilders.length;builderIndex<listBuildersLength;builderIndex+=1){var listData=listBuilders[builderIndex].data;if(listData.length===0){continue}if(listBuilders[builderIndex].header!==undefined&&listBuilders[builderIndex].header.length>0){$listContainer.append("<div class='eac-category' >"+listBuilders[builderIndex].header+"</div>")}for(var i=0,listDataLength=listData.length;i<listDataLength&&counter<listBuilders[builderIndex].maxListSize;i+=1){$item=$("<li><div class='eac-item'></div></li>");(function(){var j=i,itemCounter=counter,elementsValue=listBuilders[builderIndex].getValue(listData[j]);$item.find(" > div").on("click",(function(){$field.val(elementsValue).trigger("change");selectedElement=itemCounter;selectElement(itemCounter);config.get("list").onClickEvent();config.get("list").onChooseEvent()})).mouseover((function(){selectedElement=itemCounter;selectElement(itemCounter);config.get("list").onMouseOverEvent()})).mouseout((function(){config.get("list").onMouseOutEvent()})).html(template.build(highlight(elementsValue,phrase),listData[j]))})();$listContainer.append($item);elementsList.push(listData[i]);counter+=1}}$elements_container.append($listContainer);config.get("list").onLoadEvent()}))})();$field.after($elements_container)}function removeContainer(){$field.next("."+consts.getValue("CONTAINER_CLASS")).remove()}function highlight(string,phrase){if(config.get("highlightPhrase")&&phrase!==""){return highlightPhrase(string,phrase)}else{return string}}function escapeRegExp(str){return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}function highlightPhrase(string,phrase){var escapedPhrase=escapeRegExp(phrase);return(string+"").replace(new RegExp("("+escapedPhrase+")","gi"),"<b>$1</b>")}}function getContainerId(){var elementId=$field.attr("id");elementId=consts.getValue("CONTAINER_ID")+elementId;return elementId}function bindEvents(){bindAllEvents();function bindAllEvents(){if(checkParam("autocompleteOff",true)){removeAutocomplete()}bindFocusOut();bindKeyup();bindKeydown();bindKeypress();bindFocus();bindBlur()}function bindFocusOut(){$field.focusout((function(){var fieldValue=$field.val(),phrase;if(!config.get("list").match.caseSensitive){fieldValue=fieldValue.toLowerCase()}for(var i=0,length=elementsList.length;i<length;i+=1){phrase=config.get("getValue")(elementsList[i]);if(!config.get("list").match.caseSensitive){phrase=phrase.toLowerCase()}if(phrase===fieldValue){selectedElement=i;selectElement(selectedElement);return}}}))}function bindKeyup(){$field.off("keyup").keyup((function(event){switch(event.keyCode){case 27:hideContainer();loseFieldFocus();break;case 38:event.preventDefault();if(elementsList.length>0&&selectedElement>0){selectedElement-=1;$field.val(config.get("getValue")(elementsList[selectedElement]));selectElement(selectedElement)}break;case 40:event.preventDefault();if(elementsList.length>0&&selectedElement<elementsList.length-1){selectedElement+=1;$field.val(config.get("getValue")(elementsList[selectedElement]));selectElement(selectedElement)}break;default:if(event.keyCode>40||event.keyCode===8){var inputPhrase=$field.val();if(!(config.get("list").hideOnEmptyPhrase===true&&event.keyCode===8&&inputPhrase==="")){if(config.get("requestDelay")>0){if(requestDelayTimeoutId!==undefined){clearTimeout(requestDelayTimeoutId)}requestDelayTimeoutId=setTimeout((function(){loadData(inputPhrase)}),config.get("requestDelay"))}else{loadData(inputPhrase)}}else{hideContainer()}}break}function loadData(inputPhrase){if(inputPhrase.length<config.get("minCharNumber")){return}if(config.get("data")!=="list-required"){var data=config.get("data");var listBuilders=listBuilderService.init(data);listBuilders=listBuilderService.updateCategories(listBuilders,data);listBuilders=listBuilderService.processData(listBuilders,inputPhrase);loadElements(listBuilders,inputPhrase);if($field.parent().find("li").length>0){showContainer()}else{hideContainer()}}var settings=createAjaxSettings();if(settings.url===undefined||settings.url===""){settings.url=config.get("url")}if(settings.dataType===undefined||settings.dataType===""){settings.dataType=config.get("dataType")}if(settings.url!==undefined&&settings.url!=="list-required"){settings.url=settings.url(inputPhrase);settings.data=config.get("preparePostData")(settings.data,inputPhrase);$.ajax(settings).done((function(data){var listBuilders=listBuilderService.init(data);listBuilders=listBuilderService.updateCategories(listBuilders,data);listBuilders=listBuilderService.convertXml(listBuilders);if(checkInputPhraseMatchResponse(inputPhrase,data)){listBuilders=listBuilderService.processData(listBuilders,inputPhrase);loadElements(listBuilders,inputPhrase)}if(listBuilderService.checkIfDataExists(listBuilders)&&$field.parent().find("li").length>0){showContainer()}else{hideContainer()}config.get("ajaxCallback")()})).fail((function(){logger.warning("Fail to load response data")})).always((function(){}))}function createAjaxSettings(){var settings={},ajaxSettings=config.get("ajaxSettings")||{};for(var set in ajaxSettings){settings[set]=ajaxSettings[set]}return settings}function checkInputPhraseMatchResponse(inputPhrase,data){if(config.get("matchResponseProperty")!==false){if(typeof config.get("matchResponseProperty")==="string"){return data[config.get("matchResponseProperty")]===inputPhrase}if(typeof config.get("matchResponseProperty")==="function"){return config.get("matchResponseProperty")(data)===inputPhrase}return true}else{return true}}}}))}function bindKeydown(){$field.on("keydown",(function(evt){evt=evt||window.event;var keyCode=evt.keyCode;if(keyCode===38){suppressKeypress=true;return false}})).keydown((function(event){if(event.keyCode===13&&selectedElement>-1){$field.val(config.get("getValue")(elementsList[selectedElement]));config.get("list").onKeyEnterEvent();config.get("list").onChooseEvent();selectedElement=-1;hideContainer();event.preventDefault()}}))}function bindKeypress(){$field.off("keypress")}function bindFocus(){$field.focus((function(){if($field.val()!==""&&elementsList.length>0){selectedElement=-1;showContainer()}}))}function bindBlur(){$field.blur((function(){setTimeout((function(){selectedElement=-1;hideContainer()}),250)}))}function removeAutocomplete(){$field.attr("autocomplete","off")}}function showContainer(){$container.trigger("show.eac")}function hideContainer(){$container.trigger("hide.eac")}function selectElement(index){$container.trigger("selectElement.eac",index)}function loadElements(list,phrase){$container.trigger("loadElements.eac",[list,phrase])}function loseFieldFocus(){$field.trigger("blur")}};scope.eacHandles=[];scope.getHandle=function(id){return scope.eacHandles[id]};scope.inputHasId=function(input){if($(input).attr("id")!==undefined&&$(input).attr("id").length>0){return true}else{return false}};scope.assignRandomId=function(input){var fieldId="";do{fieldId="eac-"+Math.floor(Math.random()*1e4)}while($("#"+fieldId).length!==0);elementId=scope.consts.getValue("CONTAINER_ID")+fieldId;$(input).attr("id",fieldId)};scope.setHandle=function(handle,id){scope.eacHandles[id]=handle};return scope}(EasyAutocomplete||{});(function($){$.fn.easyAutocomplete=function(options){return this.each((function(){var $this=$(this),eacHandle=new EasyAutocomplete.main($this,options);if(!EasyAutocomplete.inputHasId($this)){EasyAutocomplete.assignRandomId($this)}eacHandle.init();EasyAutocomplete.setHandle(eacHandle,$this.attr("id"))}))};$.fn.getSelectedItemIndex=function(){var inputId=$(this).attr("id");if(inputId!==undefined){return EasyAutocomplete.getHandle(inputId).getSelectedItemIndex()}return-1};$.fn.getItems=function(){var inputId=$(this).attr("id");if(inputId!==undefined){return EasyAutocomplete.getHandle(inputId).getItems()}return-1};$.fn.getItemData=function(index){var inputId=$(this).attr("id");if(inputId!==undefined&&index>-1){return EasyAutocomplete.getHandle(inputId).getItemData(index)}return-1};$.fn.getSelectedItemData=function(){var inputId=$(this).attr("id");if(inputId!==undefined){return EasyAutocomplete.getHandle(inputId).getSelectedItemData()}return-1}})(jQuery);var template=window.template||{};template.lazyload={};(function(lazyload){let _lazyLoadInstance;lazyload.init=function(){_setupLazy()};lazyload.update=function(){if(_lazyLoadInstance){_lazyLoadInstance.update()}};function _setupLazy(){if("loading"in HTMLImageElement.prototype){const images=document.querySelectorAll('img[loading="lazy"]');images.forEach((img=>{if(img.dataset.src){img.src=img.dataset.src}if(img.dataset.srcset){img.srcset=img.dataset.srcset}}))}else{_lazyLoadInstance=new LazyLoad({elements_selector:".lazy"})}}})(template.lazyload);var template=window.template||{};template.autocomplete={};(function(autocomplete){autocomplete.init=function(){const options={url:function(phrase){return`${ajaxurl}?action=wm_autocomplete&phrase=${phrase}`},getValue:"title",requestDelay:500,template:{type:"links",fields:{link:"permalink"}},list:{maxNumberOfElements:10,match:{enabled:true},sort:{enabled:true}}};jQuery("#searchform__field").easyAutocomplete(options)}})(template.autocomplete);var template=window.template||{};template.googlemap={};(function(googlemap){googlemap.init=function(){_setupGooglemap()};googlemap.initialize=function(){var myOptions={zoom:10,center:new google.maps.LatLng(0,0),mapTypeId:google.maps.MapTypeId.ROADMAP};var map=new google.maps.Map(document.getElementById("js-map_address"),myOptions);template.googlemap.geocode(company_address,map)};googlemap.geocode=function(list,map){for(var i=0;i<list.length;i++){list=window[list]||list;var addressId=list[i].id;var geocoder=new google.maps.Geocoder;var geoOptions={address:list[i].location,region:"NO"};geocoder.geocode(geoOptions,template.googlemap.geocodeCallback(list[i],map,addressId))}};googlemap.geocodeCallback=function(item,map,addressId){return function(results,status){if(status==google.maps.GeocoderStatus.OK){template.googlemap.addMarker(map,item,results[0].geometry.location,addressId)}}};googlemap.addMarker=function(map,item,location,addressId){var marker=new google.maps.Marker({map:map,position:location});var bounds=new google.maps.LatLngBounds;bounds.extend(location);map.fitBounds(bounds);zoomChangeBoundsListener=google.maps.event.addListenerOnce(map,"bounds_changed",(function(event){if(this.getZoom()){this.setZoom(14)}}))};function _setupGooglemap(){if(jQuery("#js-map_address").length>0){$L=$L.script("//maps.googleapis.com/maps/api/js?key=[ADD YOUR OWN API KEY]&callback=template.googlemap.initialize").wait()}}})(template.googlemap);var template=window.template||{};template.mq={};(function(mq){mq.observe=function(query,callback){const mm=window.matchMedia(query);mm.addListener(callback);callback(mm)}})(template.mq);var template=window.template||{};template.mqpalm={};(function(mqpalm){mqpalm.init=function(){template.mq.observe("all and (max-width: 30em)",_handleMq)};function _handleMq(mediaQuery){if(mediaQuery.matches){console.log("Below 480px")}else{console.log("Above 480px")}}})(template.mqpalm);var template=window.template||{};template.mqlap={};(function(mqlap){mqlap.init=function(){template.mq.observe("all and (max-width: 46.875em)",_handleMq)};function _handleMq(mediaQuery){if(mediaQuery.matches){console.log("Below 750px")}else{console.log("Above 750px")}}})(template.mqlap);var template=window.template||{};template.mqdesk={};(function(mqdesk){mqdesk.init=function(){template.mq.observe("all and (max-width: 60.625em)",_handleMq)};function _handleMq(mediaQuery){if(mediaQuery.matches){console.log("Below 970px")}else{console.log("Above 970px")}}})(template.mqdesk);var template=window.template||{};template.mqwall={};(function(mqwall){mqwall.init=function(){template.mq.observe("all and (max-width: 73.125em)",_handleMq)};function _handleMq(mediaQuery){if(mediaQuery.matches){console.log("Below 1170px")}else{console.log("Above 1170px")}}})(template.mqwall);var template=window.template||{};template.mqcinema={};(function(mqcinema){mqcinema.init=function(){template.mq.observe("all and (max-width: 89.375em)",_handleMq)};function _handleMq(mediaQuery){if(mediaQuery.matches){console.log("Below 1430px")}else{console.log("Above 1430px")}}})(template.mqcinema);jQuery((function(){const template=window.template||{};for(let i in template){if("init"in template[i]){template[i].init()}}}));