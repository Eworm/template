// Calculate the grid widths
// -----------------------------------------------------------------
@mixin col-width($i) {
    width: #{100% / ($max-width / (((($max-width / $nr-of-columns) * $i))))};
}


// Every column should have a row as it's parent
// -----------------------------------------------------------------
.row {
    margin-right: -#{$gutter-skinny};
    margin-left: -#{$gutter-skinny};
    
    &:before, &:after {
        content: '';
        display: table;
        zoom: 1;
    }
    
    &:after {
        clear: both;
    }
}

.row-condensed {
    margin-right: -#{$gutter-skinny / 2};
    margin-left: -#{$gutter-skinny / 2};
}

.col {
    width: 100%;
    padding-right: $gutter-skinny;
    padding-left: $gutter-skinny;
    float: left;
    
    .row-condensed & {
        padding-right: $gutter-skinny / 2;
        padding-left: $gutter-skinny / 2;
    }
}

.col-center {
    margin-right: auto;
    margin-left: auto;
    float: none;
}

// All screen widths
// -----------------------------------------------------------------
@for $i from 1 through $nr-of-columns {

    @include min-screen($palm) {

        .col-#{$i} {
            @include col-width($i);
        }
    }
}


// Wrist
// You can remove this when unused to minimize the css
// -----------------------------------------------------------------
@for $i from 1 through $nr-of-columns {

    .col-wrist-#{$i} {

        @include min-screen($wrist) {
            @include col-width($i);
        }
    }
}


// Palm
// You can remove this when unused to minimize the css
// -----------------------------------------------------------------
@for $i from 1 through $nr-of-columns {

    .col-palm-#{$i} {

        @include min-screen($palm) {
            @include col-width($i);
        }
    }
}


// Lap
// You can remove this when unused to minimize the css
// -----------------------------------------------------------------
@for $i from 1 through $nr-of-columns {

    .col-lap-#{$i} {

        @include min-screen($lap) {
            @include col-width($i);
        }
    }
}


// Desk
// You can remove this when unused to minimize the css
// -----------------------------------------------------------------
@for $i from 1 through $nr-of-columns {

    .col-desk-#{$i} {

        @include min-screen($desk) {
            @include col-width($i);
        }
    }
}


// Wall
// You can remove this when unused to minimize the css
// -----------------------------------------------------------------
@for $i from 1 through $nr-of-columns {

    .col-wall-#{$i} {

        @include min-screen($wall) {
            @include col-width($i);
        }
    }
}

// Cinema
// You can remove this when unused to minimize the css
// -----------------------------------------------------------------
@for $i from 1 through $nr-of-columns {

    .col-cinema-#{$i} {

        @include min-screen($cinema) {
            @include col-width($i);
        }
    }
}



// Offset
// You can remove this when unused to minimize the css
// -----------------------------------------------------------------
@for $i from 1 through $nr-of-columns {

    .col-push-#{$i} {

        @include min-screen($lap) {
            margin-left: 100% / ($max-width / (((($max-width - (($nr-of-columns + 1) * $gutter)) / $nr-of-columns) * $i) + (($i + 1) * $gutter)));
        }
    }
}
