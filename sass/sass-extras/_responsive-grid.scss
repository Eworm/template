// Calculate the grid widths
@mixin col--width($i) {
    width: #{100% / ($site--max-width / (((($site--max-width / $grid-columns) * $i))))};
}


// Section dividers
.divider {
    width: 100%;
    float: left;

    @media (min-width: $mq--palm) {
    }
}


// Center site
.core {
    margin: 0 auto;
    padding: pt(4);
    clear: both;

    @media (min-width: $mq--lap) {
        width: $site--width;
        max-width: $site--max-width;
        padding: pt(4) 0;
        position: relative;
    }

    &:before,
    &:after {
        content: '';
        display: table;
        zoom: 1;
    }

    &:after {
        clear: both;
    }

    &--header {
    }

    &--decaainmenu {
        padding: 0;

        @media (min-width: $mq--lap) {
        }

        > .row {
            margin: 0;

            @media (min-width: $mq--lap) {
                margin-right: -#{pt(2)};
                margin-left: -#{pt(2)};
            }
        }
    }

    &--content {
    }

    &--doormat {
    }

    &--footer {
    }
}



// Every column should have a row as it's parent
.row {
    margin-right: -#{pt(2)};
    margin-left: -#{pt(2)};

    &:before,
    &:after {
        content: '';
        display: table;
        zoom: 1;
    }

    &:after {
        clear: both;
    }
}

.col {
    width: 100%;
    padding-right: pt(2);
    padding-left: pt(2);
    float: left;

    &--center {
        margin-right: auto;
        margin-left: auto;
        float: none;
    }
}


// All screen widths
@for $i from 1 through $grid-columns {

    @media (min-width: $mq--palm) {

        .col--#{$i} {
            @include col--width($i);
        }
    }
}


// Wrist
// You can remove this when unused to minimize the css
@for $i from 1 through $grid-columns {

    .col--wrist-#{$i} {

        @media (min-width: $mq--wrist) {
            @include col--width($i);
        }
    }
}


// Palm
// You can remove this when unused to minimize the css
@for $i from 1 through $grid-columns {

    .col--palm-#{$i} {

        @media (min-width: $mq--palm) {
            @include col--width($i);
        }
    }
}


// Lap
// You can remove this when unused to minimize the css
@for $i from 1 through $grid-columns {

    .col--lap-#{$i} {

        @media (min-width: $mq--lap) {
            @include col--width($i);
        }
    }
}


// Desk
// You can remove this when unused to minimize the css
@for $i from 1 through $grid-columns {

    .col--l-#{$i} {

        @media (min-width: $mq--desk) {
            @include col--width($i);
        }
    }
}


// Wall
// You can remove this when unused to minimize the css
@for $i from 1 through $grid-columns {

    .col--wall-#{$i} {

        @media (min-width: $mq--wall) {
            @include col--width($i);
        }
    }
}


// Cinema
// You can remove this when unused to minimize the css
@for $i from 1 through $grid-columns {

    .col--cinema-#{$i} {

        @media (min-width: $mq--cinema) {
            @include col--width($i);
        }
    }
}


// Offset
// You can remove this when unused to minimize the css
@for $i from 1 through $grid-columns {

    .col--push-#{$i} {

        @media (min-width: $mq--lap) {
            margin-left: 100% / ($site--max-width / (((($site--max-width - (($grid-columns + 1) * pt(4))) / $grid-columns) * $i) + (($i + 1) * pt(4))));
        }
    }
}
